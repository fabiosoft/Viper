//
//  PersonViewController.swift
//  Prova
//
//  Created Diego Caridei on 03/08/18.
//  Copyright © 2018 Diego Caridei. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PersonViewController: UIViewController {
    @IBOutlet weak var tableView: UITableView!
    private var people = [PersonEntity]()
    private let cellID = "Cell"
    var presenter: PersonPresenterProtocol?
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setupUI()
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        populate()
        DispatchQueue.main.asyncAfter(deadline: .now() + 5) { [weak self] in
            self?.presenter?.viewDidLoad()
        }
    }
    
    private func populate() {
        DataProvider.generatePeople().forEach { (person) in
            presenter?.save(person: person)
        }
    }
    
    // MARK: - Functions
    private func setupUI() {
        self.title = "People"
    }
    
}
extension PersonViewController: PersonViewProtocol {
    func show(people: [PersonEntity]) {
        self.people = people
        self.tableView.reloadData()
    }
}

extension PersonViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return people.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: cellID, for: indexPath)
        let name = people[indexPath.row].name
        cell.textLabel?.text = name
        return cell
    }
    
}
